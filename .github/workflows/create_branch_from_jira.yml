name: Create Branch from Jira Issue

on:
  workflow_dispatch:
    inputs:
      jira_number:
        description: 'Jira Issue Key'
        required: true
      jira_type:
        description: 'Jira Issue Type'
        required: true
      jira_title:
        description: 'Jira Issue Title'
        required: true

permissions:
  contents: write

jobs:
  create-branch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Get all branches

      - name: Extract branch details
        id: extract_branch
        run: |
          # Extract data from client_payload
          ISSUE_KEY="${{ github.event.inputs.jira_number}}"
          ISSUE_TYPE="${{ github.event.inputs.jira_type }}"
          ISSUE_TITLE="${{ github.event.inputs.jira_title}}"
          BASE_BRANCH='main'

          # Determine branch prefix based on issue type
          if [ "$ISSUE_TYPE" = "Bug" ]; then
            PREFIX="bugfix"
          elif [ "$ISSUE_TYPE" = "Story" ]; then
            PREFIX="feature"
          else
            # Default prefix for other issue types
            PREFIX="task"
          fi

          # Format the branch name
          FORMATTED_SUMMARY=$(echo "$ISSUE_TITLE" | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9]/-/g' | sed 's/--*/-/g' | sed 's/^-//' | sed 's/-$//')
          BRANCH_NAME="$PREFIX/$ISSUE_KEY-$FORMATTED_SUMMARY"


          echo "branch_name=$BRANCH_NAME" >> $GITHUB_OUTPUT
          echo "base_branch=$BASE_BRANCH" >> $GITHUB_OUTPUT
          echo "issue_key=$ISSUE_KEY" >> $GITHUB_OUTPUT

      - name: Create branch
        id: create_branch
        run: |
          BRANCH_NAME="${{ steps.extract_branch.outputs.branch_name }}"
          BASE_BRANCH="${{ steps.extract_branch.outputs.base_branch }}"
          WAS_BRANCH_CREATED=false

          # Check if branch already exists
          if git ls-remote --heads origin $BRANCH_NAME | grep -q $BRANCH_NAME; then
            echo "Branch $BRANCH_NAME already exists. Skipping creation."
            echo "was_branch_created=$WAS_BRANCH_CREATED" >> $GITHUB_OUTPUT
            exit 0
          fi

          # Create and push branch
          git checkout $BASE_BRANCH
          git pull origin $BASE_BRANCH
          git checkout -b $BRANCH_NAME
          git push origin $BRANCH_NAME

          WAS_BRANCH_CREATED=true
          echo "was_branch_created=$WAS_BRANCH_CREATED" >> $GITHUB_OUTPUT

          echo "Created branch $BRANCH_NAME from $BASE_BRANCH"

      - name: Alert branch was created
        run: |
          BRANCH_NAME="${{ steps.extract_branch.outputs.branch_name }}"
          WAS_BRANCH_CREATED="${{ steps.create_branch.outputs.was_branch_created }}"
          ISSUE_KEY="${{ steps.extract_branch.outputs.issue_key }}"

          curl -X POST ${{ secrets.CONNECTOR_URL_TEST }} \
            -H "x-dev-auth-header: ${{ secrets.X_DEV_AUTH_HEADER_PASS }}" \
            -H "Content-Type: application/json" \
            -d "{\"branch_name\":\"${BRANCH_NAME}\",\"was_branch_created\":${WAS_BRANCH_CREATED},\"issue_key\":\"${ISSUE_KEY}\"}"
